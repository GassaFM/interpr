function missing (id, pr, n, a):
	lo := id * n / pr
	hi := (id + 1) * n / pr

	m := n / 64 + 1
	b := array (m)

	for i := lo until hi:
		x := a[i]
		if x <= n:
			b[x >> 6] |= 1 << (x & 63)

	lim := pr
	while lim > 1:
		half := lim / 2
		shift := lim - half
		if (shift <= id) & (id < lim):
			to := id - shift
			for i := 0 until m:
				send (to, b[i])
		if id < half:
			from := id + shift
			for i := 0 until m:
				b[i] |= receive (from)
		lim := lim - half

	if id == 0:
		i := 0
		while b[i] == -1:
			i += 1
		j := 0
		while b[i] & (1 << j):
			j += 1
		print (i * 64 + j)
